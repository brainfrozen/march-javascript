{"version":3,"sources":["common/Contract.js","common/Events.js","common/Util.js","data/Command.js","data/Constant.js","data/Data.js","data/Model.js","data/Operation.js","data/Pointer.js","sync/Member.js","data/command/Construct.js","data/command/Delete.js","data/command/Destruct.js","data/command/Insert.js","data/command/Nil.js","data/command/Set.js","data/command/Unset.js","sync/channel/Endpoint.js","sync/channel/MemberEndpoint.js","sync/channel/Message.js","sync/time/after.js","sync/time/Clock.js","sync/time/CONST.js","sync/transform/Inclusion.js","sync/transform/Inclusions.js","sync/transform/Transformer.js"],"names":["define","_isObject","obj","type","_allKeys","keys","key","push","_createAssigner","keysFunc","undefinedOnly","length","arguments","index","source","l","i","_extend","_defaults","Contract","attributes","this","initialize","apply","prototype","declare","clone","equals","constructor","extend","protoProps","staticProps","child","parent","hasOwnProperty","Surrogate","__super__","on","event","handler","handlers","off","k","splice","trigger","Array","slice","call","error","uuid","replace","c","r","Math","random","toString","Data","Pointer","Construct","Destruct","Insert","Delete","Set","Unset","_isArray","arg","_serialize","pointer","target","_typeOf","_serializeHash","_serializeSequence","sequence","output","Operation","command","offset","data","hash","identifier","Model","_base","_memory","address","evaluate","commands","Error","Nil","find","qualifier","getType","serialize","memory","concat","Util","Events","MemberEndpoint","Message","endpoint","transformer","options","model","self","name","message","operations","member","memberTime","clock","tick","leaderTime","getRemoteTime","send","getEndpoint","Command","after","Transformer","_abstractFunction","queue","remoteTime","receive","getLocalTime","shift","enqueued","transform","setRemoteTime","setLocalTime","e","Endpoint","time","CONST","t1","t2","trailing","heading","LOGICAL_HOUR","min","CERTAINTY_MARGIN","Clock","setTime","getTime","pow","canInclude","exports","Inclusion","NIL","InsertInsert","c1","c2","include","inferior","InsertDelete","DeleteInsert","DeleteDelete","x1","SetSet","SetUnset","UnsetSet","UnsetUnset","NilNil","ALL","Inclusions","transformers","ol1","ol2","ol","j"],"mappings":"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","file":"march.min.js","sourcesContent":["/**\r\n * Created by dli on 22.02.2015.\r\n * @deprecated use es6 classes instead\r\n */\r\ndefine('common/Contract', [], function () {\r\n\r\n    // some boilerplate taken from underscore\r\n    function _isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;\r\n    };\r\n\r\n    function _allKeys(obj) {\r\n        if (!_isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function _createAssigner(keysFunc, undefinedOnly) {\r\n        return function(obj) {\r\n            var length = arguments.length;\r\n            if (length < 2 || obj == null) return obj;\r\n            for (var index = 1; index < length; index++) {\r\n                var source = arguments[index],\r\n                    keys = keysFunc(source),\r\n                    l = keys.length;\r\n                for (var i = 0; i < l; i++) {\r\n                    var key = keys[i];\r\n                    if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\r\n                }\r\n            }\r\n            return obj;\r\n        };\r\n    };\r\n\r\n    var _extend     = _createAssigner(_allKeys);\r\n    var _defaults   = _createAssigner(_allKeys, true);\r\n\r\n\r\n    var Contract = function (attributes){\r\n        if(attributes && _isObject(attributes)) {\r\n            _defaults(this, attributes);\r\n        }\r\n\r\n        this.initialize.apply(this, arguments);\r\n    }\r\n\r\n    _extend(Contract.prototype, {\r\n        declare: [],\r\n        initialize : function () {\r\n        },\r\n        clone: function(){\r\n            //TODO: code here\r\n        },\r\n        equals: function(obj) {\r\n            if (this == obj)\r\n                return true;\r\n            if (typeof obj === 'undefined' || obj == null)\r\n                return false;\r\n            if (obj.constructor != this.constructor)\r\n                return false;\r\n\r\n            var declare =  this.declare;\r\n            for(var i = 0; i < declare.length; i++) {\r\n                if(this[declare[i]] instanceof Contract){\r\n                    if (!this[declare[i]].equals(obj[declare[i]]))\r\n                        return false;\r\n                } else if (this[declare[i]] !== obj[declare[i]])\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Note: taken from backbone\r\n     * @param protoProps\r\n     * @param staticProps\r\n     * @returns {*}\r\n     */\r\n    var extend = function(protoProps, staticProps) {\r\n        var parent = this;\r\n        var child;\r\n\r\n        // The constructor function for the new subclass is either defined by you\r\n        // (the \"constructor\" property in your `extend` definition), or defaulted\r\n        // by us to simply call the parent's constructor.\r\n        if (protoProps && protoProps.hasOwnProperty('constructor')) {\r\n            child = protoProps.constructor;\r\n        } else {\r\n            child = function(){ return parent.apply(this, arguments); };\r\n        }\r\n\r\n        // Add static properties to the constructor function, if supplied.\r\n        _extend(child, parent, staticProps);\r\n\r\n        // Set the prototype chain to inherit from `parent`, without calling\r\n        // `parent`'s constructor function.\r\n        var Surrogate = function(){ this.constructor = child; };\r\n        Surrogate.prototype = parent.prototype;\r\n        child.prototype = new Surrogate;\r\n\r\n        // Add prototype properties (instance properties) to the subclass,\r\n        // if supplied.\r\n        if (protoProps) _extend(child.prototype, protoProps);\r\n\r\n        // Set a convenience property in case the parent's prototype is needed\r\n        // later.\r\n        child.__super__ = parent.prototype;\r\n\r\n        return child;\r\n    };\r\n\r\n    Contract.extend = extend;\r\n\r\n    return Contract;\r\n});\r\n","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('common/Events', ['common/Contract'], function (Contract) {\r\n\r\n    return Contract.extend({\r\n        on : function(event, handler){\r\n            if (handler && typeof handler === 'function') {\r\n                var handlers = this.handlers || (this.handlers = {});\r\n\r\n                handlers = handlers[event] || (handlers[event] = []);\r\n\r\n                handlers.push(handler);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        off : function(event, handler){\r\n            var handlers = this.handlers || (this.handlers = {});\r\n\r\n            if(handler){\r\n                handlers = handlers[event];\r\n\r\n                if(handlers){\r\n                    var k = -1;\r\n                    for(var i = 0; i < handlers.length; i++){\r\n                        if(handlers[i] == handler) {\r\n                            k = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(k >= 0){\r\n                        handlers.splice(k, 1);\r\n                    }\r\n                }\r\n            } else if (event){\r\n                delete handlers[event];\r\n            } else {\r\n                this.handlers = {};\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger : function(event){\r\n            var handlers = this.handlers || (this.handlers = {});\r\n\r\n            handlers = handlers[event];\r\n            if(handlers) {\r\n                for (var i = 0; i < handlers.length; i++) {\r\n                    try {\r\n                        handlers[i].apply(this, Array.prototype.slice.call(arguments, 1));\r\n                    } catch(error){}\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('common/Util', function () {\r\n\r\n   return {\r\n       uuid : function(){\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n                var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n                return v.toString(16);\r\n            });\r\n       }\r\n   }\r\n});\r\n","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\n\r\ndefine('data/Command', ['common/Contract'], function (Contract) {\r\n    return Contract.extend();\r\n});\r\n\r\n","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/Constant', ['data/Data'], function (Data) {\r\n    return Data.extend({\r\n        declare: ['value', 'type'] //types: number, string, boolean\r\n    });\r\n});","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/Data', ['common/Contract'], function (Contract) {\r\n    return Contract.extend();\r\n});\r\n","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\n\r\ndefine('data/Model', [\r\n    'data/Pointer',\r\n    'data/command/Construct',\r\n    'data/command/Destruct',\r\n    'data/command/Insert',\r\n    'data/command/Delete',\r\n    'data/command/Set',\r\n    'data/command/Unset'],\r\n\r\n    function (Pointer, Construct, Destruct, Insert, Delete, Set, Unset) {\r\n\r\n        function _isArray(arg){\r\n            return typeof arg === 'object' && arg instanceof Array;\r\n        }\r\n\r\n        function _serialize (pointer, target){\r\n            switch(_typeOf(target)){\r\n                case 'HASH': return _serializeHash(pointer, target); break;\r\n                case 'SEQUENCE': return _serializeSequence(pointer, target); break;\r\n            }\r\n        }\r\n\r\n        function _serializeSequence (pointer, sequence){\r\n            var output = [];\r\n\r\n            for(var i = 0; i < sequence.length; i++){\r\n                output.push(new Operation({\r\n                    pointer: pointer,\r\n                    command: new Insert({\r\n                        offset: i,\r\n                        data: sequence[i]\r\n                    })\r\n                }));\r\n            }\r\n\r\n            return output;\r\n        }\r\n\r\n        function _serializeHash (pointer, hash){\r\n            var output = [];\r\n\r\n            for(var i in hash){\r\n                output.push(new Operation({\r\n                    pointer: pointer,\r\n                    command: new Set({\r\n                        identifier: i,\r\n                        data: sequence[i]\r\n                    })\r\n                }));\r\n            }\r\n\r\n            return output;\r\n        }\r\n\r\n        function _typeOf(target){\r\n            if(typeof target !== 'undefined' && target != null) {\r\n                return target instanceof Array ? 'SEQUENCE' : 'HASH';\r\n            }\r\n        }\r\n\r\n        var Model = function(){\r\n            this._base = new Pointer();\r\n\r\n            this._memory  = {};\r\n            this._memory[this._base.address] = {};\r\n        };\r\n\r\n        Model.prototype.evaluate = function(){\r\n            var pointer, commands, command;\r\n\r\n            if(arguments[0] instanceof Operation){\r\n                pointer = arguments[0].pointer;\r\n                commands = [arguments[0].command];\r\n            } else {\r\n                pointer = arguments[0];\r\n                commands = Array.prototype.slice.call(arguments, 1);\r\n            }\r\n\r\n            var target;\r\n            if(pointer){\r\n                target = this._memory[pointer.address];\r\n            } else {\r\n                target = this._memory[this._base.address];\r\n            }\r\n\r\n            for (var i = 0; i < commands.length; i++) {\r\n                command = commands[i];\r\n\r\n                if (command instanceof Construct) {\r\n                    if (target) throw new Error('DuplicateObjectException');\r\n\r\n                    switch(command.type){\r\n                        case 'HASH': target = {}; break;\r\n                        case 'SEQUENCE': target = []; break;\r\n                        default: throw new Error('UnknownTypeException');\r\n                    }\r\n\r\n                    this._memory[pointer.address] = target;\r\n                } else if (command instanceof Destruct) {\r\n                    if (!target) throw new Error('NoSuchObjectException');\r\n                    delete this._memory[pointer.address];\r\n                    target = null;\r\n                } else if (command instanceof Insert) {\r\n                    if (!_isArray(target)) throw new Error('TypeException');\r\n                    target.splice(command.offset, 0, command.data);\r\n                } else if (command instanceof Delete) {\r\n                    if (!_isArray(target)) throw new Error('TypeException');\r\n                    target.splice(command.offset, 1);\r\n                } else if (command instanceof Set) {\r\n                    if (typeof target !== 'object') throw new Error('TypeException');\r\n                    target[command.identifier] = command.data;\r\n                } else if (command instanceof Unset) {\r\n                    if (typeof target !== 'object') throw new Error('TypeException');\r\n                    delete target[command.identifier];\r\n                } else if (!command instanceof Nil) {\r\n                    throw new Error('UnsupportedCommandException');\r\n                }\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        Model.prototype.find = function(pointer, qualifier){\r\n            var target;\r\n\r\n            if(pointer){\r\n                target = this._memory[pointer.address];\r\n            } else {\r\n                target = this._memory[this._base.address];\r\n            }\r\n\r\n            if(typeof target !== 'undefined' && typeof qualifier !== 'undefined' && qualifier != null) {\r\n                return target[qualifier];\r\n            }\r\n        }\r\n\r\n        Model.prototype.getType = function(pointer){\r\n            if(pointer){\r\n                var target = this._memory[pointer.address];\r\n                return _typeOf(target);\r\n            }\r\n        }\r\n\r\n        Model.prototype.serialize = function(pointer){\r\n            var memory = this._memory,\r\n                target;\r\n\r\n            if(pointer){\r\n                target = memory[pointer.address];\r\n                return _serialize(pointer, target);\r\n            } else {\r\n                var output = [];\r\n\r\n                for (var i in memory) {\r\n                    target = memory[i];\r\n\r\n                    pointer = (i === this._base.address ? null : new Pointer({address: i}));\r\n\r\n                    // if not root add construct operation\r\n                    if (pointer) {\r\n                        output.push(new Operation({\r\n                            pointer: pointer,\r\n                            command: new Construct({\r\n                                type: _typeOf(target)\r\n                            })\r\n                        }));\r\n                    }\r\n\r\n                    // write data out\r\n                    output.concat(_serialize(pointer, target));\r\n                }\r\n\r\n                return output;\r\n            }\r\n        }\r\n\r\n        return Model;\r\n    }\r\n);\r\n","/**\r\n * Created by dli on 06.03.2015.\r\n */\r\ndefine('data/Operation', ['common/Contract'], function (Contract) {\r\n    return Contract.extend({\r\n       declare : ['command', 'pointer']\r\n    });\r\n});\r\n\r\n","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/Pointer', ['common/Util', 'data/Data'], function (Util, Data) {\r\n    var Pointer = Data.extend({\r\n        declare: ['address'],\r\n        initialize: function(){\r\n            if(typeof this.address === 'undefined'){\r\n                this.address = Util.uuid();\r\n            }\r\n        }\r\n    });\r\n\r\n    return Pointer;\r\n});","/**\r\n * Brings memory state and endpoint together.\r\n */\r\n\r\ndefine('sync/Member', [\r\n    'common/Util',\r\n    'common/Events',\r\n    'data/Model',\r\n    'data/Operation',\r\n    'sync/channel/MemberEndpoint',\r\n    'sync/channel/Message'\r\n\r\n], function (Util, Events, Model, MemberEndpoint, Message, Operation) {\r\n\r\n    return Events.extend({\r\n\r\n        initialize : function(){\r\n            var endpoint = this.endpoint = new MemberEndpoint({\r\n                    transformer : options.transformer\r\n                }),\r\n                model = this.model = new Model(),\r\n                self = this;\r\n\r\n            this.handlers = {};\r\n\r\n            if (!this.name) this.name = Util.uuid();\r\n\r\n            endpoint.on('inbound', function(message){\r\n                var operations = message.operations;\r\n                for(var i = 0; i < operations.length; i++){\r\n                    model.evaluate(operations[i]);\r\n\r\n                    self.trigger('all', operations[i].pointer, operations[i].command);\r\n                }\r\n            });\r\n        },\r\n\r\n        evaluate : function(pointer, command){\r\n            this.model.evaluate(pointer, command);\r\n\r\n            var message = new Message({\r\n                    'member' : this.name,\r\n                    'memberTime' : this.clock.tick(),\r\n                    'leaderTime': this.endpoint.getRemoteTime(),\r\n                    'operations': [\r\n                        new Operation({\r\n                            'pointer': pointer,\r\n                            'command': command\r\n                        })\r\n                    ]\r\n                });\r\n\r\n            this.endpoint.send(message);\r\n        },\r\n\r\n        find : function(pointer, qualifier) {\r\n            return this.model.find(pointer, qualifier);\r\n        },\r\n\r\n        getEndpoint : function(){\r\n            return this.endpoint;\r\n        }\r\n    });\r\n\r\n});\r\n\r\n\r\n\r\n\r\n","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\n\r\ndefine('data/command/Construct', ['data/Command'], function (Command) {\r\n    return Command.extend({\r\n        declare: ['type'],\r\n        initialize : function(){\r\n            if(!this.type){\r\n                this.type = 'HASH';\r\n            }\r\n        }\r\n    });\r\n});","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/command/Delete', ['data/Command'], function (Command) {\r\n    return Command.extend({\r\n        declare: ['offset']\r\n    });\r\n});","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\n\r\ndefine('data/command/Destruct', ['data/Command'], function (Command) {\r\n    return Command.extend();\r\n});","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/command/Insert', ['data/Command'], function (Command) {\r\n    return Command.extend({\r\n        declare: ['offset', 'data']\r\n    });\r\n});","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/command/Nil', ['data/Command'], function (Command) {\r\n    return Command.extend();\r\n});\r\n\r\ndefine('data/command/NIL', ['data/command/Nil'], function (Nil) {\r\n    return new Nil();\r\n});","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/command/Set', ['data/Command'], function (Command) {\r\n    return Command.extend({\r\n        declare: ['identifier', 'data']\r\n    });\r\n});","/**\r\n * Created by dli on 22.02.2015.\r\n */\r\ndefine('data/command/Unset', ['data/Command'], function (Command) {\r\n    return Command.extend({\r\n        declare: ['identifier']\r\n    });\r\n});","/**\r\n *\r\n */\r\n\r\ndefine('sync/channel/Endpoint', [\r\n    'common/Events',\r\n    'sync/time/after',\r\n    'sync/transform/Transformer'\r\n\r\n], function (Events, after, Transformer) {\r\n\r\n    var _abstractFunction = function(){\r\n        throw new Error('UnimplementedFunction');\r\n    }\r\n\r\n    var Endpoint = Events.extend({\r\n\r\n        declare : ['remoteTime', 'queue'],\r\n\r\n        initialize: function(){\r\n            this.queue = [];\r\n\r\n            this.remoteTime    = 0;\r\n\r\n            this.transformer || (this.transformer = new Transformer);\r\n        },\r\n\r\n        receive: function(message) {\r\n            var queue = this.queue;\r\n\r\n            // remove messages member has seen already\r\n            try {\r\n                while(queue.length > 0 && !after(this.getLocalTime(queue[0]), this.getLocalTime(message))){\r\n                    queue.shift();\r\n                }\r\n\r\n                // harmonize remaining messages in buffer and new message at once\r\n                var enqueued;\r\n                for (var i = 0; i < queue.length; i++){\r\n                    enqueued = queue[i];\r\n                    this.transformer.transform(message.operations, enqueued.operations, message.member > enqueued.member);\r\n\r\n                    // adjust times\r\n                    this.setRemoteTime(enqueued, this.getRemoteTime(message));\r\n                    this.setLocalTime(message, this.getLocalTime(enqueued));\r\n                }\r\n\r\n                this.remoteTime = this.getRemoteTime(message); // make sure time is preserved on empty queue\r\n\r\n                this.trigger('inbound', message);\r\n\r\n            } catch (e) {\r\n                throw new Error('ChannelException');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        send: function(message) {\r\n            if(this.getRemoteTime(message) != this.remoteTime) {\r\n                throw new Error('SynchronicityException');\r\n            }\r\n\r\n            this.queue.push(message);\r\n\r\n            this.trigger('outbound', message);\r\n\r\n            return this;\r\n        },\r\n\r\n        setRemoteTime:  _abstractFunction,\r\n        setLocalTime:   _abstractFunction,\r\n        getRemoteTime:  _abstractFunction,\r\n        getLocalTime:   _abstractFunction\r\n    });\r\n\r\n    return Endpoint;\r\n});\r\n\r\n\r\n\r\n\r\n","/**\r\n * Created by dli on 23.03.2015.\r\n */\r\ndefine('sync/channel/MemberEndpoint', ['sync/channel/Endpoint'], function (Endpoint) {\r\n    return Endpoint.extend({\r\n        setRemoteTime: function(message, time){\r\n            message.leaderTime = time;\r\n        },\r\n\r\n        setLocalTime: function(message, time){\r\n            message.memberTime = time;\r\n        },\r\n\r\n        getRemoteTime: function(message){\r\n            return message.leaderTime;\r\n        },\r\n\r\n        getLocalTime:   function(message){\r\n            return message.memberTime;\r\n        }\r\n    });\r\n});\r\n","/**\r\n *\r\n */\r\n\r\ndefine('sync/channel/Message', [\r\n    'common/Contract'\r\n], function (Contract) {\r\n\r\n    return Contract.extend({\r\n\r\n        declare : ['member', 'memberTime', 'leaderTime', 'operations'],\r\n\r\n        initialize: function(){}\r\n\r\n    });\r\n\r\n});\r\n\r\n\r\n\r\n\r\n","/**\r\n * Created by dli on 25.01.2015.\r\n */\r\ndefine('sync/time/after',['sync/time/CONST'], function (CONST) {\r\n    return function(t1, t2){\r\n        if(t1 > t2){\r\n            var trailing  = t1 - t2,\r\n                heading   = CONST.LOGICAL_HOUR - t1 + t2;\r\n\r\n            if(Math.min(trailing, heading) > CONST.CERTAINTY_MARGIN) throw new Error('UncertainTemporalRelation');\r\n\r\n            return trailing < heading;\r\n        } else if (t1 < t2){\r\n            var trailing  = t2 - t1,\r\n                heading   = CONST.LOGICAL_HOUR - t2 + t1;\r\n\r\n            if(Math.min(trailing, heading) > CONST.CERTAINTY_MARGIN) throw new Error('UncertainTemporalRelation');\r\n\r\n            return heading < trailing;\r\n        }\r\n\r\n        return false;\r\n    }\r\n});","/**\r\n * Created by dli on 25.01.2015.\r\n */\r\ndefine('sync/time/Clock', ['sync/time/CONST'], function (CONST) {\r\n    var Clock = function (time){\r\n        this.time = time || 0;\r\n    }\r\n\r\n    Clock.prototype.tick = function(){\r\n        return this.time < CONST.LOGICAL_HOUR - 1 ? ++this.time : (this.time = 0);\r\n    }\r\n\r\n    Clock.prototype.setTime = function(time) {\r\n        this.time = time;\r\n    }\r\n\r\n    Clock.prototype.getTime = function(time) {\r\n        return this.time;\r\n    }\r\n\r\n    return Clock;\r\n});\r\n\r\n\r\n","/**\r\n * Created by dli on 25.01.2015.\r\n */\r\ndefine('sync/time/CONST', function () {\r\n    var LOGICAL_HOUR = Math.pow(2, 24);\r\n\r\n    return {\r\n        LOGICAL_HOUR : LOGICAL_HOUR,\r\n        CERTAINTY_MARGIN : LOGICAL_HOUR / 100\r\n    };\r\n});","/**\r\n * Created by dli on 06.03.2015.\r\n */\r\ndefine('sync/transform/Inclusion', ['common/Contract'], function (Contract) {\r\n    return Contract.extend({\r\n        canInclude : function(){\r\n            return false;\r\n        }\r\n    });\r\n});\r\n\r\n","/**\r\n * Created by dli on 06.03.2015.\r\n */\r\ndefine('sync/transform/Inclusions', [\r\n    'exports',\r\n\r\n    'sync/transform/Inclusion',\r\n    'data/command/Insert',\r\n    'data/command/Delete',\r\n    'data/command/Set',\r\n    'data/command/Unset',\r\n    'data/command/Construct',\r\n    'data/command/Destruct',\r\n    'data/command/NIL'\r\n\r\n], function (exports, Inclusion, Insert, Delete, Set, Unset, Construct, Destruct, NIL) {\r\n\r\n    var InsertInsert = exports.InsertInsert = Inclusion.extend({\r\n        canInclude: function (c1, c2) {\r\n            return c1 instanceof Insert && c2 instanceof Insert;\r\n        },\r\n        include: function (c1, c2, inferior) {\r\n            if (c1.offset > c2.offset || (c1.offset === c2.offset && inferior)) {\r\n                return new Insert({\r\n                    offset: c1.offset + 1,\r\n                    data: c1.data\r\n                });\r\n            }\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    var InsertDelete = exports.InsertDelete = Inclusion.extend({\r\n        canInclude: function (c1, c2) {\r\n            return c1 instanceof Insert && c2 instanceof Delete;\r\n        },\r\n        include: function (c1, c2, inferior) {\r\n            if (c1.offset > c2.offset) {\r\n                return new Insert({\r\n                    offset: c1.offset - 1,\r\n                    data : c1.data\r\n                });\r\n            }\r\n\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    var DeleteInsert = exports.DeleteInsert = Inclusion.extend({\r\n        canInclude: function (c1, c2) {\r\n            return c1 instanceof Delete && c2 instanceof Insert;\r\n        },\r\n        include: function (c1, c2, inferior) {\r\n            if (c1.offset >= c2.offset) {\r\n                return new Delete({\r\n                    offset: c1.offset + 1\r\n                });\r\n            }\r\n\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    var DeleteDelete = exports.DeleteDelete = Inclusion.extend({\r\n        canInclude: function (c1, c2) {\r\n            return x1 instanceof Delete && c2 instanceof Delete;\r\n        },\r\n        include: function (c1, c2, inferior) {\r\n            if (c1.offset === c2.offset) {\r\n                return NIL;\r\n            } else if (c1.offset > c2.offset) {\r\n                return new Delete({\r\n                    offset: c1.offset - 1\r\n                });\r\n            }\r\n\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    var SetSet = exports.SetSet = Inclusion.extend({\r\n        canInclude: function (c1, c2) {\r\n            return c1 instanceof Set && c2 instanceof Set;\r\n        },\r\n        include: function (c1, c2, inferior) {\r\n            if ((c1.identifier === c2.identifier) && inferior) {\r\n                return NIL\r\n            }\r\n\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    var SetUnset = exports.SetUnset = Inclusion.extend({\r\n        canInclude: function (c1, c2) {\r\n            return c1 instanceof Set && c2 instanceof Unset;\r\n        },\r\n        include: function (c1, c2, inferior) {\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    var UnsetSet = exports.UnsetSet = Inclusion.extend({\r\n        canInclude: function (c1, c2) {\r\n            return c1 instanceof Unset && c2 instanceof Set;\r\n        },\r\n        include: function (c1, c2, inferior) {\r\n            if (c1.identifier === c2.identifier) {\r\n                return NIL;\r\n            }\r\n\r\n            return c1;\r\n        }\r\n\r\n    });\r\n\r\n    var UnsetUnset = exports.UnsetUnset = Inclusion.extend({\r\n        canInclude: function(c1, c2) {\r\n            return c1 instanceof Unset && c2 instanceof Unset;\r\n        },\r\n        include: function(c1, c2, inferior) {\r\n            if (c1.identifier === c2.identifier){\r\n                return NIL;\r\n            }\r\n\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    var NilNil = exports.NilNil = Inclusion.extend({\r\n        canInclude: function(c1, c2) {\r\n            return c1 instanceof Nil || c2 instanceof Nil;\r\n        },\r\n        include: function(c1, c2, inferior) {\r\n            return c1;\r\n        }\r\n    });\r\n\r\n    exports.ALL = [\r\n        new InsertInsert,\r\n        new DeleteDelete,\r\n        new DeleteInsert,\r\n        new InsertDelete,\r\n        new SetSet,\r\n        new UnsetUnset,\r\n        new SetUnset,\r\n        new UnsetSet,\r\n        new NilNil\r\n    ];\r\n});\r\n","/**\r\n * Created by dli on 17.02.2015.\r\n */\r\ndefine('sync/transform/Transformer', [\r\n    'sync/transform/Inclusions'\r\n], function (Inclusions) {\r\n\r\n    var Transformer = function(transformers){\r\n        this.transformers = (transformers || Inclusions.ALL);\r\n    }\r\n\r\n    Transformer.prototype.transform = function(ol1, ol2, inferior) {\r\n        var ol  = ol1.slice();// [];// preserve a copy of the original\r\n\r\n        for(var i = 0; i < ol1.length; i++){\r\n            //ol[i] = ol1[i].slice();\r\n\r\n            for(var j = 0; j < ol2.length; j++){\r\n                // on context equivalence\r\n                if(((ol1[i].pointer === null || ol1[i].pointer === void 0) && (ol2[j].pointer == null || ol2[j].pointer === void 0)) ||\r\n                    (ol1[i].pointer != null && ol1[i].pointer.equals(ol2[j].pointer) )){\r\n\r\n                    ol1[i].command = this.include(ol1[i].command, ol2[j].command, inferior);\r\n                    ol2[j].command = this.include(ol2[j].command, ol[i].command, !inferior);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Transformer.prototype.include = function(c1, c2, inferior){\r\n        var transformer;\r\n        for(var i = 0; i < this.transformers.length; i++){\r\n            var transformer = this.transformers[i];\r\n            if(transformer.canInclude(c1, c2)){\r\n                return transformer.include(c1, c2, inferior);\r\n            }\r\n        }\r\n\r\n        throw new Error(\"TransformationUndefinedException\");\r\n    }\r\n\r\n    return Transformer;\r\n});"]}